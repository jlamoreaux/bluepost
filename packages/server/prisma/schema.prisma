// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  firstName String
  lastName  String
  bskyDid   String?   @unique
  accounts  Account[]
  posts     Post[]

  Session Session[]

  BlueskySession BlueskySession[]
}

model Account {
  id                String    @id @default(cuid())
  userId            String
  provider          String
  providerAccountId String
  bskyToken         String?
  bskyRefreshToken  String?
  bskyTokenExpires  DateTime?
  xToken            String?
  xRefreshToken     String?
  xTokenExpires     DateTime?
  password          String?
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Post {
  id            String   @id @default(cuid())
  content       String
  userId        String
  source        String
  crossPostedTo String?
  bskyPostId    String?
  xPostId       String?
  timestamp     DateTime @default(now())
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String
  accessToken  String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model BlueskySession {
  id           String   @id @default(cuid())
  userId       String   @unique
  expires      DateTime
  refreshToken String
  accessToken  String
  iss          String
  sub          String
  aud          String
  scope        String
  token_type   String
  dpop_key     String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
